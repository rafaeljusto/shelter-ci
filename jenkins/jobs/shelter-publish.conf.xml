<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>System created for registries to periodically validate and alert domains about DNS or DNSSEC misconfiguration.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.9">
      <projectUrl>https://github.com/rafaeljusto/shelter/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/sh

go get -u github.com/nsf/termbox-go

cd $GOPATH/src/github.com/rafaeljusto/shelter
version=`cat shelter.go | grep "Shelter version" | grep -Eo "[0-9]\.([0-9]|\.)+"`
./deploy/debian/gendeb.sh "$version" "$BUILD_NUMBER"

id="${version}-${BUILD_NUMBER}"

curl -f -T shelter_${id}_amd64.deb -urafaeljusto:<key> https://api.bintray.com/content/rafaeljusto/deb/shelter/${id}/shelter_${id}_amd64.deb
curl -f -H "Content-Type:application/json" -X POST -d "{}" -urafaeljusto:<key> https://api.bintray.com/content/rafaeljusto/deb/shelter/${id}/publish

git config --global user.name "Rafael Justo"
git config --global user.email adm@rafael.net.br
git remote set-url origin "ssh://git@github.com/rafaeljusto/shelter.git"
git tag -a -m "Version ${version}, Release ${BUILD_NUMBER}" "${id}"
git push origin "${id}"

# Send new version to Docker
cd $GOPATH/src/github.com/rafaeljusto/shelter/deploy/docker
docker.io build --rm -t rafaeljusto/shelter .
docker.io login --username="rafaeljusto" --password="<password>"
docker.io push rafaeljusto/shelter</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@1.89">
      <info>
        <propertiesContent>PATH=$PATH:/usr/local/go/bin
GOPATH=$WORKSPACE/../..</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
</project>